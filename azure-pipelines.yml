trigger:
  branches:
    include:
    - main

pool:
  vmImage: 'ubuntu-latest'


steps:
- task: TerraformInstaller@1
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: 'latest'

- checkout: self
  displayName: 'Checkout repository'

- task: TerraformTaskV4@4
  displayName: 'Terraform Init'
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    backendServiceArm: 'Azure for Students(3f0f1366-aba7-4984-a589-fbc0bfc1159c)'
    backendAzureRmResourceGroupName: 'myrg-1.0'
    backendAzureRmStorageAccountName: 'mysac17xf9mz2mqjf0f9'
    backendAzureRmContainerName: 'myfirstcontainer'
    backendAzureRmKey: 'tf/terraform.tfstate'

- task: TerraformTaskV3@3
  displayName: 'Terraform Validate'
  inputs:
    command: 'validate'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    backendServiceArm: 'Azure for Students(3f0f1366-aba7-4984-a589-fbc0bfc1159c)'
    backendAzureRmResourceGroupName: 'myrg-1.0'
    backendAzureRmStorageAccountName: 'mysac17xf9mz2mqjf0f9'
    backendAzureRmContainerName: 'myfirstcontainer'
    backendAzureRmKey: 'tf/terraform.tfstate'

- task: TerraformTaskV3@3
  displayName: 'Terraform Plan'
  inputs:
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    commandOptions: '-out=tfplan'

- task: TerraformTaskV3@3
  displayName: 'Terraform Apply'
  inputs:
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    commandOptions: '-auto-approve -input=false tfplan'



